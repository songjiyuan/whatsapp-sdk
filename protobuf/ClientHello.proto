package ClientHello;
syntax = "proto2";


enum UserAgentPlatform
{
  ANDROID = 0;
  IOS = 1;
  WINDOWS_PHONE = 2;
  BLACKBERRY = 3;
  BLACKBERRYX = 4;
  S40 = 5;
  S60 = 6;
  PYTHON_CLIENT = 7;
  TIZEN = 8;
  ENTERPRISE = 9;
  SMB_ANDROID = 10;
  KAIOS = 11;
  SMB_IOS = 12;
  WINDOWS = 13;
  WEB = 14;
}

enum ConnectType
{
  CELLULAR_UNKNOWN = 0;
  WIFI_UNKNOWN = 1;
  CELLULAR_EDGE = 100;
  CELLULAR_IDEN = 101;
  CELLULAR_UMTS = 102;
  CELLULAR_EVDO = 103;
  CELLULAR_GPRS = 104;
  CELLULAR_HSDPA = 105;
  CELLULAR_HSUPA = 106;
  CELLULAR_HSPA = 107;
  CELLULAR_CDMA = 108;
  CELLULAR_1XRTT = 109;
  CELLULAR_EHRPD = 110;
  CELLULAR_LTE = 111;
  CELLULAR_HSPAP = 112;
}

enum ReleaseChannel{
  RELEASE = 0;
  BETA = 1;
  ALPHA = 2;
  DEBUG = 3;
}

message AppVersion
{
  required uint32 primary = 1;
  required uint32 secondary = 2;
  required uint32 tertiary = 3;
  optional uint32 quaternary = 4;
}

message UserAgent
{
  optional UserAgentPlatform platform = 1;
  optional AppVersion app_version = 2;
  optional string mcc = 3;
  optional string mnc = 4;
  optional string os_version = 5;
  optional string manufacturer = 6;
  optional string device = 7;
  optional string os_build_number = 8;
  optional string phone_id = 9;
  optional ReleaseChannel release_channel = 10;
  optional string locale_language_iso_639_1 = 11;
  optional string locale_country_iso_3166_1_alpha_2 = 12;
  optional string device2 = 13;
}
  
message C2S
{
  enum ClientFeature { NONE = 0; }
  enum ConnectType {
    UNKNOWN = 0;
    WIFI = 1;
    EDGE = 100;
    IDEN = 101;
    UMTS = 102;
    EVDO = 103;
    GPRS = 104;
    HSDPA = 105;
    HSUPA = 106;
    HSPA = 107;
    CDMA = 108;
    ONExRTT = 109;
    EHRPD = 110;
    LTE = 111;
    HSPAP = 112;
  }
  enum ConnectReason {
    PUSH = 0;
    USER_ACTIVATED = 1;
    SCHEDULED = 2;
    ERROR_RECONNECT = 3;
    NETWORK_SWITCH = 4;
    PING_RECONNECT = 5;
  }
  message DnsSource {
    enum DnsMethod {
      METHOD_0 = 0;
      METHOD_1 = 1;
      METHOD_2 = 2;
      METHOD_3 = 3;
    }

    optional DnsMethod dnsMethod = 15;
    optional bool appCached = 16;
  }
  enum IosAppExtension {
    EXT_0 = 0;
    EXT_1 = 1;
    EXT_2 = 2;
  }

  message WebInfo {
    message WebdPayload {
      optional bool uses_participant_in_key = 1;
      optional bool supports_starred_messages = 2;
      optional bool supports_document_messages = 3;
      optional bool supports_url_messages = 4;
      optional bool supports_media_retry = 5;
      optional bool supports_e2e_image = 6;
      optional bool supports_e2e_video = 7;
      optional bool supports_e2e_audio = 8;
      optional bool supports_e2e_document = 9;
      optional string document_types = 10;
    }

    optional string ref_token = 1;
    optional string version = 2;
    optional WebdPayload webd_payload = 3;
  }

  message CompanionRegData{
    optional bytes e_regid = 1;
    optional bytes e_keytype = 2;
    optional bytes e_ident = 3;
    optional bytes e_skey_id = 4;
    optional bytes e_skey_val = 5;
    optional bytes e_skey_sig = 6;
    optional bytes build_hash = 7;
    optional bytes companion_props = 8;
  }

  optional uint64 username = 1;
  optional bool passive = 3;
  repeated ClientFeature client_features = 4;
  optional UserAgent useragent = 5;
  optional WebInfo web_info = 6;
  optional string push_name = 7;
  optional sfixed32 session_id = 9;
  optional bool short_connect = 10;
  optional ConnectType connect_type = 12;
  optional ConnectReason connect_reason = 13;
  repeated sfixed32 shards = 14;
  optional DnsSource dns_source = 15;
  optional uint32 connect_attempt_count = 16;
  optional CompanionRegData reg_data = 19;
  optional uint32 tag23 = 23;
  optional uint32 tag24 = 24;
  optional IosAppExtension ios_app_extension = 30;
}